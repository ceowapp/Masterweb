const path = document.querySelector('#wave');
const animation = document.querySelector('#moveTheWave');
const m = 0.512286623256592433;

function buildWave(w, h) {
  
  const a = h / 4;
  const y = h / 2;
  
  const pathData = [
    'M', w * 0, y + a / 2, 
    'c', 
      a * m, 0,
      -(1 - a) * m, -a, 
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a,
    's', 
      -(1 - a) * m, a,
      a, a,
    's', 
      -(1 - a) * m, -a,
      a, -a
  ].join(' ');
  
  path.setAttribute('d', pathData);
}

buildWave(90, 60);


////

@import url('https://fonts.googleapis.com/css?family=Josefin+Sans|Josefin+Slab|Lobster');
body {
  background: #201c29;
}
.frame {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400px;
  height: 400px;
  margin-top: -200px;
  margin-left: -200px;
  border-radius: 2px;
  box-shadow: .5rem .5rem 1rem rgba(0, 0, 0, 0.6);
  background: #643a7a;
  color: #786450;
  font-family: 'Josefin slab', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.flex {
  display: flex;
  justify-content: center;
  align-items: center;
}
.center {
  height: 299px;
  width: 320px;
  background: #fff;
  border-radius: 6px;
  box-shadow: .5rem .5rem 1rem rgba(0, 0, 0, 0.5);
  overflow: hidden;
}

.profile {
  float: left;
  width: 200px;
  height: 320px;
  text-align: center;
}
.profile .image {
  position: relative;
  width: 80px;
  height: 70px;
  margin: 38px auto 0 auto;
}
.profile .image .circle-1, .profile .image .circle-2 {
  position: absolute;
  box-sizing: border-box;
  width: 76px;
  height: 76px;
  top: -3px;
  left: -3px;
  border-width: 1px;
  border-style: solid;
  border-color: #643a7a #643a7a #643a7a transparent;
  border-radius: 50%;
  transition: all 1.5s ease-in-out;
}
.circle-1 {
  animation: circle-1 2s;
}
@keyframes circle-1 {
  100% {
    transform: rotate(-360deg);
  }
}
.profile .image .circle-2 {
  width: 82px;
  height: 82px;
  top: -6px;
  left: -6px;
  border-color: #786450 transparent #786450 #786450;
  animation: circle 2s;
}
@keyframes circle {
  100% {
    transform: rotate(360deg);
  }
}
.profile .image img {
  display: block;
  border-radius: 50%;
  background: #F5E8DF;
}
.profile .image:hover {
  cursor: pointer;
}
.profile .image:hover .circle-1, .profile .image:hover .circle-2 {
          transform: rotate(360deg);
}
.profile .image:hover .circle-2 {
          transform: rotate(-360deg);
}
.profile .name {
  font-size: 2rem;
  margin-top: 20px;
}
.profile .job {
  font-size: 1.2rem;
  line-height: 15px;
}
svg { 
  margin: 0 auto; 
  overflow: hidden;
}

#wave {
  stroke-dasharray: 0 16 101 16;
  animation: moveTheWave 2400ms linear infinite;  
}

@keyframes moveTheWave {
  0% { 
    stroke-dashoffset: 0; 
    transform: translate3d(0, 0, 0);
  }
  100% { 
    stroke-dashoffset: -133;
    transform: translate3d(-90px, 0, 0);
  }
}
.profile .actions .btn {
  display: block;
  width: 80px;
  height: 30px;
  margin: 0 auto 10px auto;
  background: none;
  border: 2px solid transparent;
  font-size: 1.1rem;
  box-sizing: border-box;
  color: #643a7a;
}
.btn, .parameter {
  font-family: 'Josefin sans';
}
.profile .actions .btn:hover {
  cursor: pointer;
}

.hvr-underline-from-center {
  display: inline-block;
  vertical-align: middle;
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
}
.hvr-underline-from-center:before {
  content: "";
  position: absolute;
  z-index: -1;
  left: 51%;
  right: 51%;
  bottom: 0;
  background: #643a7a;
  height: 1px;
  transition-property: left, right;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
.hvr-underline-from-center:hover:before, .hvr-underline-from-center:focus:before, .hvr-underline-from-center:active:before {
  left: 0;
  right: 0;
}
.stats .box {
  box-sizing: border-box;
  width: 120px;
  height: 99px;
  background: #F5E8DF;
  text-align: center;
  padding-top: 28px;
  transition: all .4s ease-in-out;
  color: #643a7a;
}
.box1 {
  animation: bg .5s ease-in-out;
}
.box2 {
  animation: bg .8s ease-in-out;
}
.box3 {
  animation: bg 1.1s ease-in-out;
}
@keyframes bg {
  0% {
  transform: translate(8rem);
  }
  100% {
    transform: translate(0);
  }
}
.stats .box:hover {
  cursor: pointer;
  color: #fff;
}
.hvr-underline-from-right {
  display: inline-block;
  vertical-align: middle;
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  overflow: hidden;
}
.hvr-underline-from-right:before {
  content: "";
  position: absolute;
  z-index: -1;
  left: 100%;
  right: 0;
  bottom: 0;
  background: #644e72;
  height: 99px;
  transition-property: left;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
}
.hvr-underline-from-right:hover:before, .hvr-underline-from-right:focus:before, .hvr-underline-from-right:active:before {
  left: 0;
}
.stats .box:nth-child(2) {
  margin: 1px 0;
}
.stats span {
  display: block;
}
.stats .value {
  font-size: 1.8rem;
  font-family: lobster;
}
.stats .parameter {
  font-size: 1rem;
  line-height: 1.2;
}






////





<div class="frame flex">
  <div class="center">
    
    <div class="profile">
      <div class="image">
        <div class="circle-1"></div>
        <div class="circle-2"></div>
        <img src="https://images.unsplash.com/photo-1536444894718-0021cbbeb45f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="Jessica Potter" width="70" height="70">
      </div>
      
      <div class="name">Jessica Potter</div>
      <div class="job">Web developer</div>
      
      <div>
        <svg xmlns="http://www.w3.org/2000/svg" 
           width="40px" height="30px"
           viewBox="5 0 80 60">
          <path id="wave" 
              fill="none" 
              stroke="#262626" 
              stroke-width="2"
              stroke-linecap="round">
          </path>
        </svg>
      </div>


      <div class="actions">
        <button class="btn hvr-underline-from-center">Follow</button>
        <button class="btn hvr-underline-from-center">Message</button>
      </div>
    </div>
    
    <div class="stats">
      <div class="box box1 hvr-underline-from-right">
        <span class="value">523</span>
        <span class="parameter">Posts</span>
      </div>
      <div class="box box2 hvr-underline-from-right">
        <span class="value">1387</span>
        <span class="parameter">Likes</span>
      </div>
      <div class="box box3 hvr-underline-from-right">
        <span class="value">146</span>
        <span class="parameter">Followers</span>
      </div>
    </div>
  </div>
</div>




gsap.set(".introAnim", {position: "absolute", left: 0, top: 0, width: "100%", height: "100%", opacity: 1 })
gsap.set(".introAnimDevice", { x:65, y:65 })
gsap.set(".tablet, .laptop, .desktop, .ooh", { opacity: 0 })


let tl = gsap.timeline({defaults:{duration:0.67, ease:"expo.inOut"}, scrollTrigger: {
      trigger: "#scrollDist",
      start: "top top",
      end: "bottom bottom",
      scrub: 0.5,
      snap:'labels',
      // snap: {
      //     snapTo: "labels", // snap to the closest label in the timeline
      //     duration: {min: 0.1, max: 0.3}, // the snap animation should be at least 0.3 seconds, but no more than 1.3 sec (determined by velocity)
      //     // ease: "expo.inOut" // the ease of the snap animation ("power3" by default)
      //   }
      }})

  .add("tablet", 0.1)
  .to(".phone", { morphSVG:(i)=>".tablet" + (i + 1) },  "tablet")
  .to(".phone5, .phone6", { opacity: 0, morphSVG: ".tablet5" }, "tablet")
  .to(".adShape1", { morphSVG: ".adShape2" }, "tablet")

  .add("laptop", 1.5)
  .to(".phone", { morphSVG: (i)=>".laptop" + (i + 1) }, "laptop")
  .to(".phone3", { opacity: 0, y: -4 }, "laptop")
  .fromTo(".laptop5", { scale: 0, transformOrigin: "50% 50%" }, { scale: 1, opacity: 1 }, "laptop")
  .to(".adShape1", { morphSVG: ".adShape4" }, "laptop")
  .from(".adShape3", { scale: 0, opacity: 0 }, "laptop")

  .add("desktop", 3)
  .to(".phone1", { morphSVG: ".desktop1" }, "desktop")
  .to(".phone2", { morphSVG: ".desktop2" }, "desktop")
  .to(".phone4", { morphSVG: ".desktop3" }, "desktop")
  .to(".laptop5", { morphSVG: { shape: ".desktop4", shapeIndex: 0 }, y: 0.5 }, "desktop")
  .to(".adShape1", { morphSVG: ".adShape6" }, "desktop")
  .to(".adShape3", { morphSVG: ".adShape5" }, "desktop")

  .add("ooh", 4.5)
  .to(".phone1", { morphSVG: ".ooh1" }, "ooh")
  .to(".phone2", { morphSVG: ".ooh2" }, "ooh")
  .to(".phone4", { scale: 0, y: -48 }, "ooh")
  .to(".laptop5", { morphSVG: ".ooh3", y: 0 }, "ooh")
  .to(".adShape1", { morphSVG: ".adShape8" }, "ooh")
  .to(".adShape3", { morphSVG: ".adShape7", ease: "back.inOut(0.6)" }, "ooh")
  .add("end")
